{"id": 579372, "name": "Shouvik Roy ", "username": "roy2003", "avatar_template": "/user_avatar/discourse.onlinedegree.iitm.ac.in/roy2003/{size}/66760_2.png", "created_at": "2025-01-13T16:24:09.236Z", "cooked": "<pre data-code-wrap=\"bash\"><code class=\"lang-bash\">!pip install chardet==5.1.0  # Install the chardet library\n</code></pre>\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">import chardet\ndef read_files():\n  \"\"\"Gets two CSV files and one TXT file from the user and reads them.\n\n  Returns:\n    A tuple containing the contents of the three files.\n  \"\"\"\n    # Get the file paths from the user.\n  csv_file_1_path = input(\"Enter the path to the first CSV file: \")\n  csv_file_2_path = input(\"Enter the path to the second CSV file: \")\n  txt_file_path = input(\"Enter the path to the TXT file: \")\n\n  # ... (Get file paths from user - same as before)\n\n  # Read the CSV files.\n  try:\n    with open(csv_file_1_path, 'rb') as f:  # Open in binary mode\n      rawdata = f.read()\n      encoding = chardet.detect(rawdata)['encoding']  # Detect encoding\n    with open(csv_file_1_path, 'r', encoding=encoding) as csv_file_1:  # Use detected encoding\n      csv_data_1 = csv_file_1.read()\n\n    # Repeat for csv_file_2_path using the same pattern\n    with open(csv_file_2_path, 'rb') as f:\n        rawdata = f.read()\n        encoding = chardet.detect(rawdata)['encoding']\n    with open(csv_file_2_path, 'r', encoding=encoding) as csv_file_2:\n        csv_data_2 = csv_file_2.read()\n\n  except FileNotFoundError:\n    print(\"Error: One or both of the CSV files could not be found.\")\n    return None\n  except UnicodeDecodeError:\n    print(\"Error: Could not decode one or both of the CSV files.\")\n    return None\n\n  # Read the TXT file.\n  try:\n    with open(txt_file_path, 'rb') as f:  # Open in binary mode to detect encoding\n        rawdata = f.read()\n        encoding = chardet.detect(rawdata)['encoding']  # Detect encoding\n    with open(txt_file_path, 'r', encoding=encoding) as txt_file:  # Open in text mode with detected encoding\n        txt_data = txt_file.read() # Read the content of the file\n  except FileNotFoundError:\n    print(\"Error: The TXT file could not be found.\")\n    return None\n  except UnicodeDecodeError:\n    print(\"Error: Could not decode the TXT file.\")\n    return None\n\n  # Return the contents of the files.\n  return csv_data_1, csv_data_2, txt_data\n\n# Call the function to read the files.\nfile_contents = read_files()\nif file_contents:\n  csv_data_1, csv_data_2, txt_data = file_contents\n  #print(\"Content of the first CSV file:\\n\", csv_data_1)\n  #print(\"\\nContent of the second CSV file:\\n\", csv_data_2)\n  #print(\"\\nContent of the TXT file:\\n\", txt_data)\n\n  # Combine the content of all files into a single string\n  all_content = csv_data_1 + csv_data_2 + txt_data\n\n  # Split the content into lines\n  lines = all_content.split('\\n')\n\n  # Initialize the total sum\n  total_sum = 0\n\n  # Iterate through each line\n  for line in lines:\n    # Split the line into symbol and value, handling potential extra spaces\n    try:\n      parts = line.strip().split(',')\n      symbol = parts[0].strip()  # Remove leading/trailing spaces from symbol\n      value = parts[1].strip()   # Remove leading/trailing spaces from value\n\n      # Check if the symbol matches the criteria (using a more robust check)\n      if symbol in ['\u20ac', '\u02c6', '\u2019'  # Euro symbol variations\n                     # Add any other known variations of the target symbols\n                   ]:\n        # Convert the value to a number and add it to the total sum\n        total_sum += float(value)\n\n    except (IndexError, ValueError):\n      # Ignore lines with incorrect formatting or non-numeric values\n      pass\n\n  # Print the total sum\n  print(\"The sum of all values associated with the specified symbols is:\", total_sum)\n</code></pre>", "post_number": 39, "post_type": 1, "posts_count": 131, "updated_at": "2025-01-14T17:56:17.328Z", "reply_count": 0, "reply_to_post_number": 38, "quote_count": 0, "incoming_link_count": 0, "reads": 202, "readers_count": 201, "score": 39.4, "yours": false, "topic_id": 161083, "topic_slug": "ga1-development-tools-discussion-thread-tds-jan-2025", "display_username": "Shouvik Roy ", "primary_group_name": "ds-students", "flair_name": "ds-students", "flair_url": null, "flair_bg_color": "", "flair_color": "", "flair_group_id": 294, "badges_granted": [], "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_see_hidden_post": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"id": 15651, "username": "Jivraj", "name": "Jivraj Singh Shekhawat", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/b9bd4f/{size}.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "can_act": true}, {"id": 6, "can_act": true}, {"id": 3, "can_act": true}, {"id": 4, "can_act": true}, {"id": 8, "can_act": true}, {"id": 10, "can_act": true}, {"id": 7, "can_act": true}], "moderator": false, "admin": false, "staff": false, "user_id": 17483, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "post_url": "/t/ga1-development-tools-discussion-thread-tds-jan-2025/161083/39", "user_cakedate": "2023-06-03", "reactions": [], "current_user_reaction": null, "reaction_users_count": 0, "current_user_used_main_reaction": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false, "topic_accepted_answer": null}