{"id": 588155, "name": "Harsh Shah", "username": "23f2003845", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/2/6f9a4e/{size}.png", "created_at": "2025-01-31T06:54:16.291Z", "cooked": "<p>For some projects where there are many dependencies, like an ML project or flask app, it\u2019s better you mantain a virtual environment since the dependencies are interconnected with their versions.</p>\n<p>Whereas for some simple projects, with less dependencies, global installation is fine.</p>\n<blockquote>\n<p>For project that is to be deployed, make sure you use the virtual environment, only then you can ensure what worked for you also works on the deployement</p>\n</blockquote>\n<hr>\n<aside class=\"quote group-ds-students\" data-username=\"24f2006531\" data-post=\"1\" data-topic=\"165922\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://dub1.discourse-cdn.com/flex013/user_avatar/discourse.onlinedegree.iitm.ac.in/24f2006531/48/111700_2.png\" class=\"avatar\"> 24f2006531:</div>\n<blockquote>\n<p>Additionally, when managing dependencies, would it be better to install packages individually using pip or list them in a requirements.txt file?</p>\n</blockquote>\n</aside>\n<p>Coming to your second question,</p>\n<p>The first time you install a fresh dependency, use direct and latest version. But if you are cloning or thinking of sharing the repo or using someone\u2019s project it\u2019s better to use requirements.txt.</p>\n<hr>\n<aside class=\"quote group-ds-students\" data-username=\"24f2006531\" data-post=\"1\" data-topic=\"165922\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://dub1.discourse-cdn.com/flex013/user_avatar/discourse.onlinedegree.iitm.ac.in/24f2006531/48/111700_2.png\" class=\"avatar\"> 24f2006531:</div>\n<blockquote>\n<p>My understanding is that if a version is not specified in the requirements.txt file, it installs the latest available version, whereas specifying a version ensures a specific installation</p>\n</blockquote>\n</aside>\n<p>The creation of requirements.txt ensures that the current installation version is listed.</p>\n<blockquote>\n<p>Never try to list requirements.txt. There is a command to do that, <code>pip3 freeze &gt; requirements.txt </code>. This does the hard work of listing the dependencies for you</p>\n</blockquote>", "post_number": 3, "post_type": 1, "posts_count": 4, "updated_at": "2025-01-31T06:54:16.291Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 21, "readers_count": 20, "score": 33.8, "yours": false, "topic_id": 165922, "topic_slug": "best-practices-for-virtual-environments-and-dependency-management-in-python", "display_username": "Harsh Shah", "primary_group_name": "ds-students", "flair_name": "ds-students", "flair_url": null, "flair_bg_color": "", "flair_color": "", "flair_group_id": 294, "badges_granted": [], "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_see_hidden_post": false, "can_wiki": false, "read": false, "user_title": "", "bookmarked": false, "actions_summary": [{"id": 2, "count": 2, "can_act": true}, {"id": 6, "can_act": true}, {"id": 3, "can_act": true}, {"id": 4, "can_act": true}, {"id": 8, "can_act": true}, {"id": 10, "can_act": true}, {"id": 7, "can_act": true}], "moderator": false, "admin": false, "staff": false, "user_id": 22479, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "post_url": "/t/best-practices-for-virtual-environments-and-dependency-management-in-python/165922/3", "user_cakedate": "2023-09-22", "user_birthdate": "1904-02-21", "reactions": [{"id": "heart", "type": "emoji", "count": 2}], "current_user_reaction": null, "reaction_users_count": 2, "current_user_used_main_reaction": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false, "topic_accepted_answer": null}