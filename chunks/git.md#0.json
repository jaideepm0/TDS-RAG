{
  "id": "git.md#0",
  "post_urls": [
    "https://tds.s-anand.net/#/git.md",
    "https://tds.s-anand.net/#/../git.md"
  ],
  "content": "## Version Control: Git, GitHub\n\n[Git](https://git-scm.com/) is the de facto standard for version control of software (and sometimes, data as well). It's a system that keeps track of changes you make to files and folders. It allows you to revert to a previous state, compare changes, etc. It's a central tool in any developer's workflow. [GitHub](https://github.com/) is the most popular hosting service for Git repositories. It's a website that shows your code, allows you to collaborate with others, and provides many useful tools for developers. Watch these introductory videos to learn the basics of Git and GitHub (98 min):\n\n[! [Git Tutorial for Beginners: Command-Line Fundamentals (30 min)](https://i.ytimg.com/vi_webp/HVsySz-h9r4/sddefault.webp)](https://youtu.be/HVsySz-h9r4)\n\n[! [Git and GitHub for Beginners - Crash Course (68 min)](https://i.ytimg.com/vi_webp/RGOj5yH7evk/sddefault.webp)](https://youtu.be/RGOj5yH7evk)\n\nEssential Git Commands:\n\n```bash\n# Repository Setup\ngit init                   # Create new repo\ngit clone url              # Clone existing repo\ngit remote add origin url  # Connect to remote\n\n# Basic Workflow\ngit status                 # Check status\ngit add . # Stage all changes\ngit commit -m \"message\"    # Commit changes\ngit push origin main       # Push to remote\n\n# Branching\ngit branch                 # List branches\ngit checkout -b feature    # Create/switch branch\ngit merge feature          # Merge branch\ngit rebase main            # Rebase on main\n\n# History\ngit log --oneline          # View history\ngit diff commit1 commit2   # Compare commits\ngit blame file             # Show who changed what\n```\n\nBest Practices:\n\n1. **Commit Messages**\n\n   ```bash\n   # Good commit message format\n   type(scope): summary\n\n   Detailed description of changes. # Examples\n   feat(api): add user authentication\n   fix(db): handle null values in query\n   ```\n\n2. **Branching Strategy**\n\n   - main: Production code\n   - develop: Integration branch\n   - feature/\\*: New features\n   - hotfix/\\*: Emergency fixes\n\n3. **Code Review**\n   - Keep PRs small (<400 lines)\n   - Use draft PRs for WIP\n   - Review your own code first\n   - Respond to all comments\n\nEssential Tools\n\n- [GitHub Desktop](https://desktop.github.com/): GUI client\n- [GitLens](https://gitlens.amod.io/): VS Code extension\n- [gh](https://cli.github.com/): GitHub CLI\n- [pre-commit](https://pre-commit.com/): Git hooks"
}